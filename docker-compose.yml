version: '3.3'

services:

  postgres:
    image: postgres:13.1
    pull_policy: always
    ports:
      - "${POSTGRESPORT}:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRESPASSWORD}
      - POSTGRES_USER=${POSTGRESUSER}
      - POSTGRES_DB=${POSTGRESDB}
    healthcheck:
      test: [ "CMD", "psql", "-U", "${POSTGRESUSER}", "-d", "${POSTGRESDB}" ]
      interval: 500ms
      timeout: 1s
      retries: 5
    volumes:
      - demoapidbdata:/var/lib/postgresql/data
    restart: always
    networks:
      - demoapi


  demoapi:
    image: sever3d/springboot-api-demo
    pull_policy: always
    ports:
      - "9091:9091"
    environment:
      - POSTGRESHOST=${POSTGRESHOST}
      - POSTGRESPORT=${POSTGRESPORT}
      - POSTGRESUSER=${POSTGRESUSER}
      - POSTGRESPASSWORD=${POSTGRESPASSWORD}
      - POSTGRESDB=${POSTGRESDB}
    depends_on:
      - database-migrations
    networks:
      - demoapi



  schema-creation:
    image: postgres:13.1
    pull_policy: always
    volumes:
      - ./sql:/sql
    environment:
      DATABASE_NAME: ${POSTGRESDB}
      DATABASE_USERNAME: ${POSTGRESUSER}
      DATABASE_PASSWORD: ${POSTGRESPASSWORD}
      DATABASE_ENDPOINT: ${POSTGRESHOST}
      DATABASE_PORT: ${POSTGRESPORT}
    entrypoint: [ "/sql/create-schema.sh" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - demoapi
    command: ["demoapi"]



  # DB migrations from local files
#  database-migrations:
#    image: liquibase/liquibase
#    volumes:
#      - ./db/changelog:/liquibase/changelog
#      - ./db/sql:/liquibase/sql
#    command:
#      - "--url=jdbc:postgresql://postgres:5432/${POSTGRESDB}"
#      - "--username=${POSTGRESUSER}"
#      - "--password=${POSTGRESPASSWORD}"
#      - "--changeLogFile=changelog/db.changelog-main.yml"
#      - "--liquibaseSchemaName=demoapi"
#      - "update"
#    depends_on:
#      postgres:
#        condition: service_healthy
#    networks:
#      - demoapi


  # DB migrations from build container
  database-migrations:
    image: sever3d/springboot-api-demo-database
    pull_policy: always
    command:
      - "--url=jdbc:postgresql://${POSTGRESHOST}:${POSTGRESPORT}/${POSTGRESDB}"
      - "--username=${POSTGRESUSER}"
      - "--password=${POSTGRESPASSWORD}"
      - "--changeLogFile=changelog/db.changelog-main.yml"
      - "--liquibaseSchemaName=demoapi"
      - "update"
    depends_on:
      - schema-creation
    networks:
      - demoapi


networks:
  demoapi:
    driver: bridge

volumes:
  demoapidbdata:
    driver: local